{"ast":null,"code":"import _defineProperty from \"/home/codecrunch/.nvm/versions/node/v12.4.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/codecrunch/.nvm/versions/node/v12.4.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/codecrunch/.nvm/versions/node/v12.4.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/codecrunch/Desktop/Og-tools/organizational/src/views/Settings/components/Password/Password.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport '../../../../assets/scss/index1.css';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Button, TextField } from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState({\n    password: '',\n    confirm: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"blue-background\",\n    subheader: \"This information will let our application communicate with your WS1 server\" // title=\"Password\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-top-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"my-top-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"WSOne API Settings\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"UEM Host (E.G. Cn801.Awmdm.Com)\",\n    name: \"password\" // onChange={handleChange}\n    ,\n    type: \"text\" // value={values.password}\n    ,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"UEM Username\",\n    name: \"confirm\" // onChange={handleChange}\n    ,\n    style: {\n      marginTop: '1rem'\n    },\n    type: \"text\" // value={values.confirm}\n    ,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"UEM Password\",\n    name: \"password\",\n    onChange: handleChange,\n    style: {\n      marginTop: '1rem'\n    },\n    type: \"password\",\n    value: values.confirm,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"UEM API Key\",\n    name: \"password\" // onChange={handleChange}\n    ,\n    style: {\n      marginTop: '1rem'\n    },\n    type: \"text\" // value={values.confirm}\n    ,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"UEM Global OG Identifier (E.G. 77)\",\n    name: \"password\" // onChange={handleChange}\n    ,\n    style: {\n      marginTop: '1rem'\n    },\n    type: \"text\" // value={values.confirm}\n    ,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: '0 auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Save\")))));\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\nexport default Password;","map":{"version":3,"sources":["/home/codecrunch/Desktop/Og-tools/organizational/src/views/Settings/components/Password/Password.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Button","TextField","useStyles","root","Password","props","className","rest","classes","password","confirm","values","setValues","handleChange","event","target","name","value","marginTop","margin","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport '../../../../assets/scss/index1.css';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n        className=\"blue-background\"\n          subheader=\"This information will let our application communicate with your WS1 server\"\n        // title=\"Password\"\n        />\n        <div className=\"my-top-header\">\n          <h3 className=\"my-top-name\">WSOne API Settings</h3>\n        </div>\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"UEM Host (E.G. Cn801.Awmdm.Com)\"\n            name=\"password\"\n            // onChange={handleChange}\n            type=\"text\"\n            // value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"UEM Username\"\n            name=\"confirm\"\n            // onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"text\"\n            // value={values.confirm}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"UEM Password\"\n            name=\"password\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"UEM API Key\"\n            name=\"password\"\n            // onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"text\"\n            // value={values.confirm}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"UEM Global OG Identifier (E.G. 77)\"\n            name=\"password\"\n            // onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"text\"\n            // value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions >\n          <div style={{ margin: '0 auto' }}>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n            >\n              Save\n          </Button>\n          </div>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}